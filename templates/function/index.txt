import AWS from "aws-sdk";
import { AWSLambdaResponse, AWSLambdaEvent } from "../types";

import { default as data } from "../../data";

const { tables } = data();
const { stage } = process.env;

const DynamoDB = new AWS.DynamoDB.DocumentClient();

export type {{name.capitalizeFirst}}Body = {
  x: string;
  y: string;
};

export type {{name.capitalizeFirst}}Response = string;

export async function handler(event: AWSLambdaEvent): Promise<AWSLambdaResponse<{{name.capitalizeFirst}}Response>> {
  try {
    // NOTE: the way to extract request parameters is different for other methods
    // This is boilerplate for POST
    // To get query parameters:
    /**
     * const { x, y } = event.queryStringParameters
     * const { x, y } = event.pathParameters // if you are using a route like {{name}}/:x/:y
     */
    // You would also need to extend the AWSLambdaEvent for proper typings
    const { x, y } = JSON.parse(event.body) as {{name.capitalizeFirst}}Body;
    return {
      statusCode: 200,
      body: "",
    };
  } catch (e) {
    console.log(e);
    return { statusCode: 500 };
  }
}
